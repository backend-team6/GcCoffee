<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.model.repository.ProductsRepository">
    <resultMap id="productResultMap" type="org.example.model.dto.ProductsDTO">
        <result property="productId" column="product_id"/>
        <result property="productName" column="product_name"/>
        <result property="category" column="category"/>
        <result property="price" column="price"/>
        <result property="description" column="description"/>
        <result property="created_at" column="created_at"/>  <!-- createdAt 명시적 매핑 -->
    </resultMap>

    <insert id="insert" parameterType="org.example.model.dto.ProductsDTO">
        INSERT INTO Products(product_id, product_name, category, price, description, created_at)
        VALUES(#{productId}, #{productName}, #{category}, #{price}, #{description}, NOW())
    </insert>

    <select id="list" resultType="org.example.model.dto.ProductsDTO" resultMap="productResultMap">
        select product_id , product_name, category, price, description, date_format(created_at,'%Y-%m-%d') as created_at  from products
    </select>

    <select id="findById" resultType="org.example.model.dto.ProductsDTO" resultMap="productResultMap">
        select product_id , product_name, category, price, description, date_format(created_at,'%Y-%m-%d') as created_at
        from products
        where product_id = #{productId,jdbcType=BINARY}
    </select>

   <update id="update" parameterType="org.example.model.dto.ProductsDTO">
       UPDATE Products
       SET product_name = #{productName},
           category = #{category},
           price = #{price},
           description = #{description}
   </update>
</mapper>